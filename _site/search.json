{
  "articles": [
    {
      "path": "about.html",
      "title": "About us",
      "description": "The ALA Science & Decision Support Team",
      "author": [],
      "contents": "\r\nWe are responsible for:\r\nData analysis & reporting on key projects\r\nR package development & maintenance\r\nOutreach & engagement with the research community\r\nMeet the team\r\nClick on photos to view their articles and contributions\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nMartin Westgate\r\n\r\nTeam Leader\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nJessica Fenker\r\n\r\nData Analyst\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nJenna Wraith\r\n\r\nTraining & Outreach Coordinator\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nDax Kellie\r\n\r\nData Analyst\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nOlivia Torresan\r\n\r\nSupport Officer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nAmanda Buyan\r\n\r\nData Analyst\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nShandiya Balasubramaniam\r\n\r\nData Analyst\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-05-25T17:17:02+10:00"
    },
    {
      "path": "galah.html",
      "title": "galah",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\r\n\r\n\r\nd-title {\r\n    display: none;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ngalah\r\ngalah is an R interface to biodiversity data hosted by\r\nthe Atlas of Living Australia (ALA). It enables users to locate and\r\ndownload species occurrence records (observations, specimens, eDNA\r\nrecords, etc.), taxonomic information, or associated media such as\r\nimages or sounds, and to restrict their queries to particular taxa or\r\nlocations.\r\nVisit the galah\r\nR package website to learn more about how to use\r\ngalah\r\nIf you have any questions, comments, or spot any bugs, email us or report an\r\nissue on our GitHub page\r\n\r\n\r\nGet started\r\nInstall from CRAN\r\n\r\n\r\ninstall.packages(\"galah\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-05-25T17:17:06+10:00"
    },
    {
      "path": "index.html",
      "title": "Welcome to ALA Labs",
      "description": "This site is a resource for coding projects that use data sourced from the ALA. We hope that users will find interesting content, whether their focus is ecological modelling, data visualisation, or simply investigating the natural world through a digital lens. Enjoy!",
      "author": [],
      "contents": "\r\n\r\n\r\nData visualisation\r\n\r\n\r\n\r\nClick to see related posts on each\r\ntopic\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nSummaries\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nMaps\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nTrees\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nTaxonomy\r\n\r\n\r\n\r\nClick to see related posts on each\r\ntopic\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nPlants\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nBirds\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nMammals\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nWe value\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    Openness\r\n\r\nData are most useful when they are widely available and easy to use. We try to encourage the sharing of tools that make data from the Atlas of Living Australia more open and useful for everyone\r\n\r\n\r\n\r\n\r\n\r\n\r\n    Scientific transparency\r\n\r\nTransparency is necessary for reproducible science. We encourage that decisions, methods and deviations in our workflow are clear and transparent from the planning phase, to the retrieval and analysis of data, to the final output\r\n\r\n\r\n\r\n\r\n\r\n\r\n    Robust methods\r\n\r\nNo method or analytic procedure is perfect. We value consideration for strengths and limitations of each method or analysis to help choose the methods that provide robust, reliable results\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-05-25T17:17:13+10:00"
    },
    {
      "path": "info_ala-labs-maintenance.html",
      "title": "Managing the ALA Labs Website",
      "author": [
        {
          "name": "Dax Kellie",
          "url": {}
        }
      ],
      "date": "27/02/2022",
      "contents": "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nAbout\r\nPosts\r\n\r\n\r\nResources\r\n \r\n▾\r\n\r\n\r\ngalah\r\nContact Us\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n☰\r\n\r\n\r\n  \r\n    \r\n      \r\n        \r\n        \r\n        \r\n      \r\n      \r\n    \r\n    \r\n      \r\n  \r\n    \r\n     \r\n  \r\n\r\n\r\n  About\r\n\r\n\r\n  Posts\r\n\r\n\r\n  \r\n    Resources\r\n     \r\n    \r\n  \r\n  \r\n      galah\r\n    \r\n    \r\n      Contact Us\r\n    \r\n  \r\n\r\n  \r\n\r\n\r\n  \r\n    \r\n     \r\n  \r\n\r\n      \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\nManaging the ALA Labs Website\r\nDax Kellie\r\n27/02/2022\r\n\r\n\r\n\r\n\r\n\r\nInstallation\r\nInstall the {distill} package from CRAN:\r\ninstall.packages(\"distill\")\r\nClone the ala-labs repository to a local directory.\r\n\r\n\r\nBuild the website\r\nWe use a custom file to build the website. To build the website, run\r\nthe code in R/ignition_sequence.R.\r\nIf successful, to see the built website navigate to your local file\r\nexplorer and opening _site/index.html.\r\nWe use a custom file to build the website because we have added\r\nseveral bespoke features to the standard distill website format (like\r\nauto-updating lists in _people pages and a custom search\r\ntoolbar). Adding these features means that using the recommended method\r\nby {distill} to\r\nuse the Build Website tab in the Build pane no longer\r\nworks. Only using rmarkdown::build_site() will also not\r\nwork correctly.\r\n\r\nWhen you build the website, the following things occur:\r\nAll of the Rmd and md files in the root\r\nwebsite directory will be rendered into HTML. Note, however, that\r\nmarkdown files beginning with “_” are not rendered (this is a convention\r\nto designate files that are included by top level documents, or in other\r\nwords, distill knows not to overwrite these folders because they are\r\nimportant).\r\nPosts will be copied into the _site/posts\r\nsub-directory. Pages with post listings will be re-generated.\r\nThe generated HTML files and any supporting files (e.g. CSS and\r\nJavaScript) are copied into the _site directory.\r\nThe top 3 most recently written Posts will be added to the\r\nauthor’s _people page. (Note: For the website to build,\r\nensure that all people who have authored a post have their own People\r\npage, even if this page is not accessible to the public)\r\nThe HTML files within the _site directory are built and\r\nready to deploy as a standalone static website.\r\n\r\nPublishing the website\r\nThe _site folder has all of the information needed for\r\nthe static website. The ALA web hosting service has been told to publish\r\nwhat is in the _site folder on the master branch to .\r\nWhen you are happy with changes or updates to the website, make sure\r\nyour changes to the _site folder are pushed to the master\r\nbranch.\r\n\r\n\r\n\r\nUpdate the website\r\n\r\nWebsite workflow\r\nUpdates to the website should be added to the dev branch\r\nof the GitHub repo. In the dev branch, any changes made\r\nwill not be published to the existing website. The dev\r\nbranch effectively works as a test site prior to deployment.\r\n\r\n\r\n\r\nAdd or edit content\r\n\r\nSite Output and Navigation\r\nThe _site.yml controls the main website information and\r\nsite navigation.\r\nElements can be edited to alter navigation paths. Here is one example\r\nof the navbar for the ALA Labs website:\r\n---\r\nnavbar:\r\n  logo:\r\n    image: images/logos/ALA_Logo_Stacked_REV.png\r\n    href: https://www.ala.org.au\r\n  right:\r\n    - text: \"About\"\r\n      href: about.html\r\n    - text: \"Posts\"\r\n      href: posts.html\r\n    - text: \"Resources\"\r\n      menu:\r\n        - text: \"galah\"\r\n          href: galah.html\r\n        - text: \"ALA Labs Style Guide\"\r\n          href: test_style-guide.html\r\n    - icon: fab fa-github\r\n      href: https://github.com/AtlasOfLivingAustralia/science\r\n---\r\n\r\n\r\nWeb Pages\r\n\r\nAdd top-level pages\r\nTop-level web pages (the ones people see in the top navigation bar)\r\nare saved in the top-level folder by their page name (for example, the\r\ncontent for the About page is in about.Rmd).\r\nAdditional pages can be added by creating a new R Markdown page in\r\nthe main website folder with the yaml header:\r\n---\r\ntitle: \"\"\r\ndescription: |\r\n  description-goes-here\r\noutput: \r\n  distill::distill_article:\r\n    css: theme.css\r\n---\r\nPages can then be added to the website by their text and\r\nhref to the site navigation in _site.yml under\r\nnavbar (see Site\r\nOutput and Navigation)\r\n\r\n\r\n\r\nPosts\r\n\r\nWriting new posts\r\nPosts are written in R markdown files. Post templates can be found in\r\nthe templates folder.\r\nTo create a new post:\r\nCreate a new folder in the _posts folder. The folder\r\nname should be the date and title of your article (for example,\r\n2022-02-17_sunburst-plots-for-taxonomic-data\r\nIn your new post folder, save your Post file. You are welcome to\r\nuse a simple name for your Rmd file (for example,\r\nsunburst-plots.Rmd)\r\nBe sure that you have filled in all the necessary information\r\nabout your post in the yaml header and in the author card\r\nsection\r\nWrite your post\r\nRender/Knit your document using the\r\nR/render_post.R document. Using the code in\r\nR/render_post.R allows you to avoid adding personal\r\ninformation to your Post (like your personal email in\r\ngalah_config()). The most recently knitted version of your\r\nfile is what will appear on the website\r\nWhen you are happy with your post, build the website. After the\r\nwebsite it built, your rendered post should appear in the Posts listing\r\npage\r\n\r\n\r\n\r\n\r\nTheme customisation\r\nDistill uses a CSS framework that can be fully customised. CSS theme\r\nsettings are in theme.css. See the Distill\r\nwebsite page for instructions on how to edit additional website\r\nproperties.\r\nSome properties can be found in labeled sections, like settings for\r\nwebsite fonts, header and footer sections. For example, website header\r\nsettings can be found in the .distill-site-header\r\nsection:\r\n/*-- WEBSITE HEADER + FOOTER --*/\r\n/* These properties only apply to Distill sites and blogs  */\r\n\r\n.distill-site-header {\r\n  --title-size:       18px;    \r\n  --text-color:       #ff414b; /* edited */\r\n  --text-size:        15px;\r\n  --hover-color:      #dd424c; /* edited */\r\n  --bkgd-color:       #ffd8db; /* edited */\r\n}\r\nOther properties are edited using custom CSS. These are (mostly)\r\nlabelled and relate either to built-in distill html elements or html\r\nelements built in R/function.R.\r\n\r\nCustom html elements using R functions\r\nR/functions.R contains functions that create html\r\nelements within the ALA Labs website. R/functions.R uses\r\nthe {htmlTools}\r\npackage to write html code using R syntax.\r\nFor example, the following R function and html code are equivalent.\r\nThey both will create a link of class = \"article-link\".\r\nThis class name can be used with CSS in theme.css to edit\r\nthe element style.\r\n#<!-- html -->\r\n#<a class = \"article-link\" href = \"https://ala.org.au/\">my text<\/a>\r\n# R function\r\nadd_link_to_article <- function(title, url){\r\n  tags$a(\r\n    class = \"article-link\",\r\n    href = url,\r\n    \"text\"\r\n  )\r\n}\r\n\r\nadd_link_to_article(text = \"my text\", url = \"https://ala.org.au/\")\r\nThe benefits of writing R functions to create html elements are:\r\nRather than trying to edit html elements that the Distill package\r\nruns in the back-end to build the website, adding html elements using R\r\nfunctions is easier and less prone to errors\r\nIt is easier for people familiar in R to reuse and edit the\r\ncontent of existing html elements created by R functions\r\nTo use functions in the R/functions.R file on a specific\r\nwebsite page or post, the following code block must be added below the\r\nYAML header\r\n  ```{r, include=FALSE}\r\n  library(htmltools)\r\n  source(\"R/functions.R\")\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*-- Copyright --*/\r\n\r\n.copyright-container {\r\n  display: flex;\r\n  width: 100%;\r\n  margin-bottom: 30px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.copyright-row {\r\n  width: 100%;\r\n  height: 66px;\r\n  position: relative;\r\n  margin-bottom: -1.75vw;\r\n  background-color: #c44d34;\r\n  background-position: bottom;\r\n  background-size: cover;\r\n  display: flex;\r\n}\r\n\r\n.copyright-width {\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: 1140px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  padding-bottom: 30px;\r\n  margin: auto;\r\n}\r\n\r\n.copyright-column-left {\r\n  float: left;\r\n  width: 50%;\r\n  max-width: 50%;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  position: relative;\r\n  min-height: 1px;\r\n  display: flex;\r\n  flex-direction:column;\r\n  display:inline-block;\r\n}\r\n\r\n.copyright-column-right {\r\n  float: right;\r\n  text-align: right;\r\n  width: 50%;\r\n  max-width: 50%;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  position: relative;\r\n  min-height: 1px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  display:inline-block;\r\n}\r\n\r\n.copyright-text {\r\n  color: white;\r\n  font-size: 12px;\r\n  padding-top: 10px}\r\n\r\n.copyright-text a:hover {\r\n  color: #222322;\r\n}\r\n\r\n\r\n/*-- Logos and acknowledgement --*/\r\n\r\n.footer-container {\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: 1140px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  padding-top: 50px;\r\n  padding-bottom: 50px;\r\n  margin: auto;\r\n}\r\n\r\n.distill-site-footer {\r\n  padding-top: 0px;\r\n  padding-bottom: 10px;\r\n  text-align: left;\r\n}\r\n\r\n.row-footer { /* Do not change the name of this column - it causes issues */\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-wrap: wrap;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.column-footer { /* Do not change the name of this column - it causes issues */\r\n  float: left;\r\n  width: 50%;\r\n  max-width: 50%;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  position: relative;\r\n  min-height: 1px;\r\n  display: flex;\r\n  flex-direction:column;\r\n  display:inline-block;\r\n}\r\n\r\n\r\n.footer-logo {\r\n  text-align: left;\r\n  margin:5px;\r\n}\r\n\r\n.footer-text {\r\n  font-family: \"Lato\", sans-serif;\r\n  font-weight: 700;\r\n  font-size: 1.1rem;\r\n  line-height: 1.2;\r\n  color: #565656;\r\n  text-align: left;\r\n}\r\n\r\n.footer-text-small {\r\n  font-family: Roboto,sans-serif;\r\n  font-size: .82rem;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 400;\r\n  color: #565656;\r\n  text-align: left;\r\n  margin-top: 10px;\r\n}\r\n\r\nd-article a:hover {\r\n  color: #E06E53;\r\n}\r\n\r\n/*-- Back to ALA button --*/\r\n\r\n.link-container {\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  display: block;\r\n  width: 30em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.link-button {\r\n  border: none;\r\n  color: #E06E53;\r\n  padding: 10px 15px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 18px;\r\n  margin: 4px 2px;\r\n  transition-duration: 0.3s;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  border: 2px solid #E06E53;\r\n  border-radius: 10px;\r\n}\r\n\r\n.link-button:hover {\r\n  background-color: #222322;\r\n  border: 2px solid #222322;\r\n  color: #E06E53;\r\n}\r\n\r\n.ala-icon {\r\n    height: 20px;\r\n    width: auto;\r\n    /* Other styles here */\r\n}\r\n\r\n@media screen and (max-width: 952px) {\r\n  .link-container {\r\n    margin: auto;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .footer-container {\r\n    width: 100%;\r\n    max-width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  .column-footer {\r\n    float:left;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    display: block;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n  .link-container {\r\n    display: block;\r\n    width: 20em;\r\n    margin: auto;\r\n  }\r\n\r\n  .copyright-column-left {\r\n    width: 50%;\r\n  }\r\n\r\n  .copyright-column-right {\r\n    width: 50%;\r\n  }\r\n\r\n  .copyright-row {\r\n    height: 100px;\r\n    margin-bottom: -3.75vw;\r\n  }\r\n}\r\n\r\n.logo-ncris {\r\n  width: 150px;\r\n  height: 109px;\r\n  margin-right: 15px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.logo-csiro {\r\n  width: 109px;\r\n  height: 109px;\r\n  margin-right: 15px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.logo-gbif {\r\n  width: 207px;\r\n  height: 109px;\r\n}\r\n\r\n\r\n\r\n  \r\n    \r\n      The ALA is made possible by contributions from its partners, is supported\r\n      by\r\n      NCRIS, is hosted by\r\n             CSIRO, and is the Australian node of\r\n             GBIF.\r\n      \r\n      \r\n        \r\n      \r\n        \r\n      \r\n        \r\n    \r\n    \r\n      Acknowledgement of Traditional Owners and Country\r\n      The Atlas of Living Australia acknowledges Australia's Traditional Owners\r\n      and pays respect to the past and present Elders of the nation's Aboriginal\r\n      and Torres Strait Islander communities. We honour and celebrate the\r\n      spiritual, cultural and customary connections of Traditional Owners to\r\n      country and the biodiversity that forms part of that country.\r\n    \r\n\r\n\r\n\r\n  \r\n     \r\n        \r\n                \r\n                    This work is licensed under a Creative Commons Attribution 3.0 Australia License\r\n                    \r\n                \r\n            \r\n        \r\n         \r\n           Copyright\r\n             \r\n           Terms of Use\r\n             \r\n           System Status\r\n         \r\n      \r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// add bootstrap table styles to pandoc tables\r\nfunction bootstrapStylePandocTables() {\r\n  $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed');\r\n}\r\n$(document).ready(function () {\r\n  bootstrapStylePandocTables();\r\n});\r\n\r\n\r\n\r\n$(document).ready(function () {\r\n  window.buildTabsets(\"TOC\");\r\n});\r\n\r\n$(document).ready(function () {\r\n  $('.tabset-dropdown > .nav-tabs > li').click(function () {\r\n    $(this).parent().toggleClass('nav-tabs-open');\r\n  });\r\n});\r\n\r\n  (function () {\r\n    var script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src  = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\";\r\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n  })();\r\n",
      "last_modified": "2022-05-25T17:17:14+10:00"
    },
    {
      "path": "posts.html",
      "title": "Posts",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2022-05-25T17:17:19+10:00"
    },
    {
      "path": "test_style-guide.html",
      "title": "ALA Labs Style Guide",
      "description": "Style guide for R script and R Markdown documents\n",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\r\n\r\nContents\r\nGetting started\r\nCreate an ALA R Markdown\r\nfile\r\nKniting to HTML safely\r\n\r\nPush to Github\r\nReproducible workflows\r\nSafe paths\r\n\r\nWriting understandable\r\ncode\r\nSummarise your code\r\nStyle code using\r\nstyler\r\n\r\nStyling your document\r\nTables\r\nFigures\r\nModel output\r\nCode chunk options\r\nExample: echo and\r\neval\r\n\r\n\r\nCool Distill Things\r\nCode folding\r\n\r\n\r\nThis document details the Atlas of Living Australia style guide for\r\ncreating html files from R Markdown\r\nGetting started\r\nCreate an ALA R Markdown\r\nfile\r\nTo create new R Markdown file that follows the ALA style guide,\r\ninstall the alatheme\r\npackage.\r\n\r\n\r\ndevtools::install_github(\"AtlasOfLivingAustralia/alatheme\")\r\n\r\n\r\n\r\nThe {alatheme} package contains ALA templates for R Markdown files.\r\nAfter installing, create a new template R markdown file by selecting\r\nFile –> New File –> New\r\nR Markdown which opens the “New R Markdown” pane\r\nIn the “New R Markdown” pane, select From Template\r\nand choose from the list of {alatheme} templates.\r\nFill in your information where necessary in the yaml\r\nheader and in the required code and text chunks.\r\nKniting to HTML safely\r\nIn R Studio, clicking the Knit button in the left\r\nupper menu above your script renders your R Markdown file into an HTML\r\nfile.\r\nHowever, if your code requires a config setting with\r\npersonal or sensitive information, . However, packages like\r\ngalah require users to enter an email address prior to\r\ndownloading data using\r\ngalah_config(email = \"your-email@email.com\"). Knitting\r\nwithout this information in the document will cause an error.\r\nA better workflow for rendering R Markdown files is by using a\r\nseparate script combined with the here package. Running the\r\nfollowing script outside of your R Markdown file will render your R\r\nMarkdown file in the file’s directory:\r\n\r\n\r\nlibrary(galah)\r\ngalah_config(email = \"your-email@email.com\")\r\n\r\nlibrary(here)\r\npath <- here(\"folder\", \"subfolder\", \"subfolder\", \"your-code.Rmd\")\r\nrmarkdown::render(path)\r\n\r\n\r\n\r\n\r\nPush to Github\r\n\r\nReproducible workflows\r\nSafe paths\r\nUsing setwd() to set a working directory can cause\r\nissues when setting folder paths, and can easily prevent a script or\r\nworkflow from being reproducible. \r\nOne alternative suggested by Jenny Bryan\r\nis to use here::here() from the here package to build your directory\r\npaths. here::here() automatically creates paths relative to\r\nthe top level directory.\r\nRead a full description of how to use the here()\r\nfunction to create safe paths in Chapter 3 of What They Forgot\r\nto Teach You About R\r\nFor example:\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(here)\r\n\r\ndf <- read.delim(here(\"projects\", , \"style_guide\", \"data.csv\"))\r\np <- ggplot(df, aes(x, y)) + geom_point()\r\nggsave(here(\"plots\", \"foofy_scatterplot.png\"))\r\n\r\n\r\n\r\nWriting understandable code\r\nSummarise your code\r\nPeople who read your code should be able to understand what it does\r\nand why you made the choices you did. It is helpful to include brief\r\nsummaries of what your code is meant to do, and the logic of any\r\ndecision you might make after seeing a result or output. For example, if\r\nyour code used a statistical model, include your basic interpretation\r\nand subsequent decision process after seeing the results. \r\nUse sentences, paragraphs and code chunks to add structure to your\r\nscript. Try to create a flowing, logical story of how to run an analysis\r\nor make a data visualisation. \r\nCode chunks should be brief. They should be supplemented with notes,\r\ndescriptions or visual output that provides context to what a given\r\nchunk of code is meant to do. Users should be able to follow each\r\ntransformation that is made to your data, each output that results from\r\na transformation, and any final output. \r\nDo not expect your reader to know what they should see in your\r\noutput. If there is something in your code output that you wish to\r\nhighlight, it is best to tell your reader what they should see in your\r\noutput and how you have interpreted it.\r\nThere is no single correct code chunk size; you must use your best\r\njudgement. But if it seems that the result of several lines of code is\r\nunclear, you may need to split the code chunks to make the results\r\neasier to follow. \r\nStyle code using\r\nstyler\r\nUse the styler package to ensure your code is formatted\r\ncorrectly and/or consistently, The styler package formats\r\nyour code according to the tidyverse style guide (or another custome\r\nstyle) prior to uploading a finished file document. \r\nSee the styler github and tidyverse\r\npages for more information \r\nInstall the styler package to add style buttons to your\r\nR Markdown Addins dropdown menu. Clicking Addins ->\r\nstyle active file will reformat the code in your active\r\nfile. Clicking ** Addins** -> style active section\r\nwill reformat code in your current section. \r\nAlternatively, you style_file() or\r\nstyle_text() can be run in the console. \r\nStyling your document\r\nSee the R\r\nMarkdown cheat sheet for more information on R Markdown formatting\r\n\r\nFor tips to make your R Markdown output pretty, see Pimp my RMD by Yan\r\nHoltz \r\nTables\r\nSeveral packages can create tables with nice formatting.\r\nOne example is kableExtra:\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(kableExtra)\r\nkable(\r\n  head(mtcars, n=5)) %>% kable_styling()\r\n\r\n\r\n\r\n\r\n\r\nmpg\r\n\r\n\r\ncyl\r\n\r\n\r\ndisp\r\n\r\n\r\nhp\r\n\r\n\r\ndrat\r\n\r\n\r\nwt\r\n\r\n\r\nqsec\r\n\r\n\r\nvs\r\n\r\n\r\nam\r\n\r\n\r\ngear\r\n\r\n\r\ncarb\r\n\r\n\r\nMazda RX4\r\n\r\n\r\n21.0\r\n\r\n\r\n6\r\n\r\n\r\n160\r\n\r\n\r\n110\r\n\r\n\r\n3.90\r\n\r\n\r\n2.620\r\n\r\n\r\n16.46\r\n\r\n\r\n0\r\n\r\n\r\n1\r\n\r\n\r\n4\r\n\r\n\r\n4\r\n\r\n\r\nMazda RX4 Wag\r\n\r\n\r\n21.0\r\n\r\n\r\n6\r\n\r\n\r\n160\r\n\r\n\r\n110\r\n\r\n\r\n3.90\r\n\r\n\r\n2.875\r\n\r\n\r\n17.02\r\n\r\n\r\n0\r\n\r\n\r\n1\r\n\r\n\r\n4\r\n\r\n\r\n4\r\n\r\n\r\nDatsun 710\r\n\r\n\r\n22.8\r\n\r\n\r\n4\r\n\r\n\r\n108\r\n\r\n\r\n93\r\n\r\n\r\n3.85\r\n\r\n\r\n2.320\r\n\r\n\r\n18.61\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n4\r\n\r\n\r\n1\r\n\r\n\r\nHornet 4 Drive\r\n\r\n\r\n21.4\r\n\r\n\r\n6\r\n\r\n\r\n258\r\n\r\n\r\n110\r\n\r\n\r\n3.08\r\n\r\n\r\n3.215\r\n\r\n\r\n19.44\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n3\r\n\r\n\r\n1\r\n\r\n\r\nHornet Sportabout\r\n\r\n\r\n18.7\r\n\r\n\r\n8\r\n\r\n\r\n360\r\n\r\n\r\n175\r\n\r\n\r\n3.15\r\n\r\n\r\n3.440\r\n\r\n\r\n17.02\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n3\r\n\r\n\r\n2\r\n\r\n\r\nkableExtra is also able to be used using\r\nmagittr or base piping:\r\n\r\n\r\nmtcars %>% \r\n  group_by(gear) %>% \r\n  dplyr::summarise(cyl = mean(cyl),\r\n            disp = mean(disp)) %>%\r\n  kbl() %>%\r\n  kable_styling()\r\n\r\n\r\n\r\ngear\r\n\r\n\r\ncyl\r\n\r\n\r\ndisp\r\n\r\n\r\n3\r\n\r\n\r\n7.466667\r\n\r\n\r\n326.3000\r\n\r\n\r\n4\r\n\r\n\r\n4.666667\r\n\r\n\r\n123.0167\r\n\r\n\r\n5\r\n\r\n\r\n6.000000\r\n\r\n\r\n202.4800\r\n\r\n\r\n\r\n\r\nhead(mtcars |>\r\n  subset(select = c(\"cyl\", \"disp\", \"gear\")), n = 5) |>\r\n  kbl() |>\r\n  kable_styling()\r\n\r\n\r\n\r\n\r\n\r\ncyl\r\n\r\n\r\ndisp\r\n\r\n\r\ngear\r\n\r\n\r\nMazda RX4\r\n\r\n\r\n6\r\n\r\n\r\n160\r\n\r\n\r\n4\r\n\r\n\r\nMazda RX4 Wag\r\n\r\n\r\n6\r\n\r\n\r\n160\r\n\r\n\r\n4\r\n\r\n\r\nDatsun 710\r\n\r\n\r\n4\r\n\r\n\r\n108\r\n\r\n\r\n4\r\n\r\n\r\nHornet 4 Drive\r\n\r\n\r\n6\r\n\r\n\r\n258\r\n\r\n\r\n3\r\n\r\n\r\nHornet Sportabout\r\n\r\n\r\n8\r\n\r\n\r\n360\r\n\r\n\r\n3\r\n\r\n\r\nFigures\r\nControlling the size of figures can help when you want people to\r\nfocus on trends of many plots or on details of a single plot. \r\nYou can control how many columns your plots created in a chunk are\r\nprinted into.\r\nAdd out.width = c(\"50%\", \"50%\"), fig.show = \"hold\":\r\n\r\n``{r out.width=c('50%', '50%'), fig.show='hold'}\r\nboxplot(1:10)\r\nplot(rnorm(10))\r\n`\r\n\r\n\r\n\r\n\r\nControl other parts of figure output in the chunk header as well. For\r\nexample:\r\n\r\n``{r, fig.align=\"center\", fig.width=6, fig.height=6, fig.cap=\"Figure: Here is a really important caption.\"}\r\n\r\n\r\n\r\nlibrary(tidyverse)\r\nmpg %>%\r\n  ggplot( aes(x=reorder(class, hwy), y=hwy, fill=class)) + \r\n    geom_boxplot() +\r\n    xlab(\"class\") +\r\n    theme(legend.position=\"none\")\r\n\r\n\r\n\r\n\r\nFigure 1: Figure: Here is a really important caption.\r\n\r\n\r\n\r\nModel output\r\nWant to show more readable model output? Use the\r\nmodel_parameters() function from the parameters package to\r\nmake your output clear and organised. The\r\nmodel_parameters() function can be considered as a\r\nlightweight alternative to broom::tidy():\r\n\r\n\r\nlibrary(parameters)\r\nmodel <- lm(Sepal.Width ~ Petal.Length * Species + Petal.Width, data = iris)\r\n\r\n# regular model parameters\r\nmodel_parameters(model)\r\n\r\n\r\nParameter                           | Coefficient |   SE |         95% CI | t(143) |      p\r\n-------------------------------------------------------------------------------------------\r\n(Intercept)                         |        2.89 | 0.36 | [ 2.18,  3.60] |   8.01 | < .001\r\nPetal Length                        |        0.26 | 0.25 | [-0.22,  0.75] |   1.07 | 0.287 \r\nSpecies [versicolor]                |       -1.66 | 0.53 | [-2.71, -0.62] |  -3.14 | 0.002 \r\nSpecies [virginica]                 |       -1.92 | 0.59 | [-3.08, -0.76] |  -3.28 | 0.001 \r\nPetal Width                         |        0.62 | 0.14 | [ 0.34,  0.89] |   4.41 | < .001\r\nPetal Length * Species [versicolor] |       -0.09 | 0.26 | [-0.61,  0.42] |  -0.36 | 0.721 \r\nPetal Length * Species [virginica]  |       -0.13 | 0.26 | [-0.64,  0.38] |  -0.50 | 0.618 \r\n\r\nmodel_parameters() can also be used for parameter\r\nstandardization:\r\n\r\n\r\n# standardized parameters\r\nmodel_parameters(model, standardize = \"refit\")\r\n\r\n\r\nParameter                           | Coefficient |   SE |         95% CI | t(143) |      p\r\n-------------------------------------------------------------------------------------------\r\n(Intercept)                         |        2.89 | 0.36 | [ 2.18,  3.60] |   8.01 | < .001\r\nPetal Length                        |        0.26 | 0.25 | [-0.22,  0.75] |   1.07 | 0.287 \r\nSpecies [versicolor]                |       -1.66 | 0.53 | [-2.71, -0.62] |  -3.14 | 0.002 \r\nSpecies [virginica]                 |       -1.92 | 0.59 | [-3.08, -0.76] |  -3.28 | 0.001 \r\nPetal Width                         |        0.62 | 0.14 | [ 0.34,  0.89] |   4.41 | < .001\r\nPetal Length * Species [versicolor] |       -0.09 | 0.26 | [-0.61,  0.42] |  -0.36 | 0.721 \r\nPetal Length * Species [virginica]  |       -0.13 | 0.26 | [-0.64,  0.38] |  -0.50 | 0.618 \r\n\r\n\r\nCode chunk options\r\nSee the R\r\nmarkdown documentation to view chunk options. \r\nExample: echo and\r\neval\r\nReaders should be able to identify where every file in a workflow\r\ncomes from (little is more frustrating than wondering where a required\r\ndata file is located). Code used to load or extract data (from\r\ngalah, for example) should be clearly identified. \r\nHowever, some code takes a very long time to run and you may have\r\nsaved it locally or in a repository to save time and/or space. In this\r\ncase, it is possible to show code without running it. \r\nAdd eval = FALSE to the chunk header to display the code\r\nbut prevent the chunk from running:\r\n\r\n``{r, eval = FALSE}\r\nala_counts(group_by = \"phylum\")\r\n`\r\n\r\nYou can then load a local file in the background, without showing the\r\ncode. \r\nAdd echo = FALSE to your chunk header to run the code\r\nbut prevent the chunk from displaying:\r\n\r\n``{r, echo = FALSE}\r\ndata <- readRDS(file = \"local_file.rds\")\r\n`\r\n\r\nCool Distill Things\r\nCode folding\r\nDoes a plot require a lot of code that distracts from the plot\r\nitself? Distill has a really nice code folding feature:\r\n\r\n\r\nShow code\r\n\r\nlibrary(galah)\r\nlibrary(data.table)\r\nlibrary(dtplyr) # provides data.table backend for dplyr\r\nlibrary(tidyverse)\r\nlibrary(lubridate) # for dates\r\nlibrary(ggpubr)\r\n\r\n# Might need to config email to get ALA data\r\nala_config(email = \"dax.kellie@csiro.au\")\r\n\r\n\r\n# Get records\r\noccurrences_Tas <- ala_occurrences(filters = select_filters(stateProvince = \"Tasmania\",\r\n                                               year = seq(2018, 2020),\r\n                                               basisOfRecord = \"HumanObservation\"))\r\noccurrences_Tas <- setDT(occurrences_Tas) # make data.table\r\n\r\n\r\n\r\n\r\n\r\nShow code\r\n\r\n# date format\r\noccurrences_Tas$eventDate <- as_date(occurrences_Tas$eventDate)\r\n\r\n# Wrangling\r\noccurrences_Tas <- occurrences_Tas %>%\r\n  mutate(\r\n    month = month(eventDate, label = TRUE), # add month col\r\n    year = year(eventDate)                  # add year col\r\n  ) %>%\r\n  filter(!is.na(eventDate)) %>%             # remove NAs\r\n  as.data.table()\r\n# any(is.na(occurrences_Tas$day))\r\n\r\n# get month counts\r\nmonth_counts <- occurrences_Tas[, .N, by = c(\"month\")]\r\nmonth_counts$month <- ordered(factor(month_counts$month,\r\n  levels = c(\r\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n  )\r\n))\r\n\r\nggdotchart(month_counts,\r\n  x = \"month\", y = \"N\",\r\n  color = \"month\", # Color by groups\r\n  palette = \"viridis\", # Custom color palette\r\n  sorting = \"none\", # Sort value in descending order\r\n  add = \"segments\", # Add segments from y = 0 to dots\r\n  legend = \"none\",\r\n  rotate = FALSE,\r\n  dot.size = 4,\r\n  add.params = list(color = \"month\", size = 1),\r\n  title = \"Records added to ALA by month (2018-2020)\",\r\n  ylab = \"Number of records\",\r\n  xlab = \"Month\",\r\n  ggtheme = theme_pubr() # ggplot2 theme\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-05-25T17:17:29+10:00"
    }
  ],
  "collections": ["posts/posts.json", "people/people.json"]
}
