---
title: "How to Make a Map using ALA data"
author: "Amanda Buyan,Dax Kellie"
date: 2023-11-23
format: 
  html:
    css: style.css
    highlight-style: tango
draft: true
---

Maps are a useful way to represent data, especially if you want to see where Atlas data is.  It is also helpful, when cleaning your data, to spot errors (say, one of your occurrences is in the ocean when it is a terrestrial species). In this post, we will use Python, the `galah-python`,`geopandas` and `matplotlib` packages to create a map.  

First, we need to set up our environment for `galah-python`. To do this, we need to use the `galah_config` function to set two `galah`-specific variables: 1. `atlas` to `Australia` (to get ALA data), and 2. `email` to your ALA-registered email.  To register for the ALA, visit [the ALA's Create Account page](https://auth.ala.org.au/userdetails/registration/createAccount).

```{python}
#| eval: true
#| message: false
#| warning: false
import galah
galah.galah_config(atlas = "Australia", email = "amanda.buyan@csiro.au")
```

Now, we will use an example query about Peron's tree frog:

*Download record counts of Peron's tree frog since 2018 in New South Wales by FrogID*

Below, we have added comments to show the user what parts of this code correspond to the query above.

```{python}
galah.atlas_counts(                      # *Download record counts*
    taxa="litoria peronii",              # *of Peron's tree frog*
    filters=["year>=2018",               # *since 2018*
             "cl22=New South Wales",     # *in New South Wales*
             "dataResourceName=FrogID"]  # *by FrogID*
)
```

Now that we know we expect ~28,000 counts of Peron's tree frog, we can download the occurrence records associated with this query.

```{python}
galah.atlas_occurrences(
    taxa="litoria peronii",
    filters=["year>=2018",
             "cl22=New South Wales",
             "dataResourceName=FrogID"]
)
```

As we can see, we get a lot of columns by default from the ALA!  To see which columns that are available, we can type the following code:

```{python}
frogs = galah.atlas_occurrences(
    taxa="litoria peronii",
    filters=["year>=2018",
             "cl22=New South Wales",
             "dataResourceName=FrogID"]
)
frogs.columns
```

Since we only want to make a map using the species name, latitude and longitude, we can specify the data columns we want by using the `fields` argument, and using the column names `scientificName`,`decimalLatitude`, and `decimalLongitude`.

```{python}
galah.atlas_occurrences(
    taxa="litoria peronii",
    filters=["year>=2018",
             "cl22=New South Wales",
             "dataResourceName=FrogID"],
    fields=["scientificName","decimalLatitude","decimalLongitude"]
)
```

Now that we have the data we want, it is time to make a map.  First, download the latest state and territory boundaries from the Australian Bureau of statistics (link [here](https://www.abs.gov.au/statistics/standards/australian-statistical-geography-standard-asgs-edition-3/jul2021-jun2026/access-and-downloads/digital-boundary-files)).  After downloading it, put it in a folder you can easily access and then unzip the zip file you downloaded to find a shapefile titled `STE_2021_AUST_GDA94.shp`.  This is what you need to complete the map.

```{python}
from matplotlib import pyplot as plt
import geopandas as gpd

# Get Peron's tree frog occurrences
frogs = galah.atlas_occurrences(
  taxa="litoria peronii",
  filters=["year>=2018",
           "cl22=New South Wales",
           "dataResourceName=FrogID"],
  fields=["scientificName","decimalLongitude","decimalLatitude"]
)

# Get Australian state and territory boundaries
states = gpd.read_file("STE_2021_AUST_GDA94.shp")

# Change Coordinate Reference System (CRS) of the shape file and plot New South Wales 
states = states.to_crs(4326)
states[states["STE_NAME21"] == "New South Wales"].plot(edgecolor = "#5A5A5A", linewidth = 0.5, facecolor = "white", figsize = (12,6))
```

Now, we will add our species data to the map.

```{python}
ax = states[states["STE_NAME21"] == "New South Wales"].plot(edgecolor = "#5A5A5A", linewidth = 0.5, facecolor = "white", figsize = (12,6))
plt.scatter(frogs['decimalLongitude'],frogs['decimalLatitude'], c = "#6fab3f", alpha = 0.5)
```

For some final touches (to make the map prettier), we can add labels, titles and legends, as well as save the figure.

```{python}
ax = states[states["STE_NAME21"] == "New South Wales"].plot(edgecolor = "#5A5A5A", linewidth = 0.5, facecolor = "white", figsize = (12,6))
plt.scatter(frogs['decimalLongitude'],frogs['decimalLatitude'], c = "#6fab3f", alpha = 0.5, label = "Litoria peronii")
plt.legend()
ax.set_xlabel("Longitude",fontsize=16)
ax.set_ylabel("Latitude",fontsize=16)
plt.title("Peron's tree frog since 2018 in New South Wales by FrogID",fontsize=20)
plt.savefig("perons_tree_frog_nsw.png")
```